<!--Load the AJAX API-->
<script type="text/javascript" src="https://www.google.com/jsapi"></script>
<script type="text/javascript">
  // Load the Visualization API and the chart package.
  google.load('visualization', '1', {packages: ['corechart','table']});
</script>
<script type="text/javascript">

	// Set a callback to run when the Google Visualization API is loaded.
  google.setOnLoadCallback(drawVisualization);

  function drawVisualization() {
  
	var likeOptions = {title:'', 
					colors: ['#0088CC'], 
					width: 450, 
					height: 200, 
					seriesType: "bars", 
					animation:{duration: 1500,easing: 'out'}, 
					hAxes:[{title:'Competidores'}],
					vAxis: {minValue:0, maxValue:<%= @maxlikes %>},
					fontSize: 10,
					legend: {position: 'top'}
					};
	var activeOptions = {title:'', 
						colors: ['#76D4E5'], 
						width: 450, 
						height: 200, 
						seriesType: "bars", 
						animation:{duration: 1500,easing: 'out'},
						hAxes:[{title:'Competidores'}], 
						vAxis: {minValue:0, maxValue:<%= @maxactiv %>},
						// chartArea:{left:"20%",top:20,width:"50%",height:"75%"}
						fontSize: 10,
						legend: {position: 'top'} // legend: {position: 'top', textStyle: {color: 'blue', fontSize: 16}}
						// Try out the new HTML tooltip.
						//allowHtml: true,
						//tooltip: {isHtml: true},
						//focusTarget: 'category'
						}

   // Some raw data (not necessarily accurate)
	var rowDataNil = <%= raw @data_nil %>;
	var rowData = <%= raw @data %>;

    // Create and populate the data tables.
	var dataTable = [];
    dataTable[0] = google.visualization.arrayToDataTable(rowDataNil);
    dataTable[1] = google.visualization.arrayToDataTable(rowData);
      
  	// Likes Chart
  	var dataLikes = []
  	dataLikes[0] = new google.visualization.DataView(dataTable[0]);
  	dataLikes[1] = new google.visualization.DataView(dataTable[1]);
  	// Actives Chart
    var dataActives = [];
    dataActives[0] = new google.visualization.DataView(dataTable[0]);
    dataActives[1] = new google.visualization.DataView(dataTable[1]);


	function drawcharts(n) {
		dataLikes[n].setColumns([0, 3, {sourceColumn:2, role:'tooltip',type:'string'}]);
	    chartLikes.draw(dataLikes[n], likeOptions); 
	
	    dataActives[n].setColumns([0, 4, {sourceColumn:2, role:'tooltip',type:'string'}]);
	    chartActives.draw(dataActives[n], activeOptions);
	}

    function addSelectListeners(chartx)
    {
      google.visualization.events.addListener(table, 'select', function() {
        chartx.setSelection(table.getSelection());
      });
    }

	// The table
    var table = new google.visualization.Table(document.getElementById('table'));

    var chartLikes = new google.visualization.ComboChart(document.getElementById('graph_div'));
    var chartActives = new google.visualization.ComboChart(document.getElementById('graph_div.2'));


    table.draw(dataTable[1], {allowHtml: true});
	drawcharts(0);
	drawcharts(1);

    addSelectListeners(chartLikes);
    addSelectListeners(chartActives);

  }

</script>

